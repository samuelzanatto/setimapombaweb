// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
  @@index([username])
}

model Live {
  id          Int      @id @default(autoincrement())
  youtubeId   String   @unique
  title       String
  viewers     Int      @default(0)
  isActive    Boolean  @default(true)
  ofertaAtiva Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  leituras       Leitura[]
  mensagens      Mensagem[]
  pedidosOracao  PedidoOracao[]
  viewerSessions ViewerSession[]

  @@map("lives")
}

model Leitura {
  id       Int      @id @default(autoincrement())
  texto    String
  minuto   String
  liveId   Int
  live     Live     @relation(fields: [liveId], references: [id])
  createdAt DateTime @default(now())

  @@map("leituras")
}

model Mensagem {
  id       Int      @id @default(autoincrement())
  usuario  String
  texto    String
  liveId   Int
  live     Live     @relation(fields: [liveId], references: [id])
  createdAt DateTime @default(now())

  @@map("mensagens")
}

model PedidoOracao {
  id       Int      @id @default(autoincrement())
  para     String
  motivo   String
  liveId   Int
  live     Live     @relation(fields: [liveId], references: [id])
  createdAt DateTime @default(now())

  @@map("pedidos_oracao")
}

model ViewerSession {
  id        Int      @id @default(autoincrement())
  sessionId String   @unique
  userName  String?
  userImage String?
  liveId    Int
  live      Live     @relation(fields: [liveId], references: [id])
  createdAt DateTime @default(now())
  endedAt   DateTime?

  @@map("viewer_sessions")
}